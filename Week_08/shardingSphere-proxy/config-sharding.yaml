#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

######################################################################################################
# 
# Here you can configure the rules for the proxy.
# This example is configuration of sharding rule.
# 
######################################################################################################
##
#schemaName: GoodsTransaction
##
#dataSourceCommon:
#  username: root
#  password: 123456
#  connectionTimeoutMilliseconds: 30000
#  idleTimeoutMilliseconds: 60000
#  maxLifetimeMilliseconds: 1800000
#  maxPoolSize: 10
#  minPoolSize: 1
#  maintenanceIntervalMilliseconds: 30000
##
#dataSources:
#  ds_0:
#    url: jdbc:mysql://127.0.0.1:3307/GoodsTransaction?serverTimezone=UTC
#  ds_1:
#    url: jdbc:mysql://127.0.0.1:3308/GoodsTransaction?serverTimezone=UTC
##
#rules:
#- !SHARDING
#  tables:
#    Order:
#      actualDataNodes: ds_${0..1}.Order${0..2}
#      tableStrategy:
#        standard:
#          shardingColumn: order_id
#          shardingAlgorithmName: t_order_inline
#      keyGenerateStrategy:
#        column: order_id
#        keyGeneratorName: snowflake
#  defaultDatabaseStrategy:
#    standard:
#      shardingColumn: order_id
#      shardingAlgorithmName: database_inline
#  defaultTableStrategy:
#    none:
#
#  shardingAlgorithms:
#    database_inline:
#      type: INLINE
#      props:
#        algorithm-expression: ds_${order_id % 2}
#    t_order_inline:
#      type: INLINE
#      props:
#        algorithm-expression: Order${order_id % 3}
#
#  keyGenerators:
#    snowflake:
#      type: SNOWFLAKE
#      props:
#        worker-id: 123

######################################################################################################
#
# If you want to connect to MySQL, you should manually copy MySQL driver to lib directory.
#
######################################################################################################

schemaName: sharding_order

dataSourceCommon:
  username: root
  password: 123456
  connectionTimeoutMilliseconds: 30000
  idleTimeoutMilliseconds: 60000
  maxLifetimeMilliseconds: 1800000
  maxPoolSize: 50
  minPoolSize: 1
  maintenanceIntervalMilliseconds: 30000

dataSources:
  ds_0:
    url: jdbc:mysql://127.0.0.1:3307/GoodsTransaction?serverTimezone=UTC&useSSL=false
  ds_1:
    url: jdbc:mysql://127.0.0.1:3308/GoodsTransaction?serverTimezone=UTC&useSSL=false

rules:
- !SHARDING
  tables:
    t_order:
      actualDataNodes: ds_${0..1}.Order${0..15}
      tableStrategy:
        standard:
          shardingColumn: order_id
          shardingAlgorithmName: t_order_inline
      keyGenerateStrategy:
        column: order_id
        keyGeneratorName: snowflake
  defaultDatabaseStrategy:
    standard:
      shardingColumn: order_id
      shardingAlgorithmName: database_inline
  defaultTableStrategy:
    none:

  shardingAlgorithms:
    database_inline:
      type: INLINE
      props:
        algorithm-expression: ds_${order_id % 2}
    t_order_inline:
      type: INLINE
      props:
        algorithm-expression: Order${order_id % 16}

  keyGenerators:
    snowflake:
      type: SNOWFLAKE
      props:
        worker-id: 123
